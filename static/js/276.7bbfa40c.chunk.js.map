{"version":3,"file":"static/js/276.7bbfa40c.chunk.js","mappings":"4PAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8SCAJD,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,oRAeJE,EAAUF,EAAAA,GAAAA,IAAH,oF,SChBPG,EAAU,WACnB,OACI,UAACD,EAAD,YACI,SAAC,EAAD,CAAME,GAAG,SAAT,qBACA,SAAC,EAAD,CAAMA,GAAG,YAAT,wBAGX,E,4DCJD,SAASC,EAAcC,GACrB,IACIC,EADAC,EAAO,EAIX,IAAKD,EAAI,EAAGA,EAAID,EAAOG,OAAQF,GAAK,EAClCC,EAAOF,EAAOI,WAAWH,KAAOC,GAAQ,GAAKA,GAG/C,IAAIG,EAAQ,IAEZ,IAAKJ,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAEzBI,GAAS,aADMH,GAAa,EAAJD,EAAU,KACdK,SAAS,KAAMC,OAAO,EAC3C,CAGD,OAAOF,CACR,CAED,SAASG,EAAaC,GACpB,MAAO,CACLC,GAAI,CACFC,QAASZ,EAAcU,IAEzBG,SAAS,GAAD,OAAKH,EAAKI,MAAM,KAAK,GAAG,IAEnC,CAEc,SAASC,IACrB,IAAML,GAAOM,EAAAA,EAAAA,IAAYC,EAAAA,IAC1B,OACE,SAACC,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,UACE,SAACC,EAAA,GAAD,kBAAYZ,EAAaC,IAAzB,IAAgCC,GAAI,CAAEW,MAAO,GAAIC,OAAQ,QAI9D,ECvCmB5B,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,oRAAV,IAeME,EAAUF,EAAAA,GAAAA,IAAH,8G,UCVP6B,EAAW,WAGpB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OAEI,UAAC,EAAD,YACI,SAACX,EAAD,KAGA,SAACY,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,YAAYC,QAAS,kBAAML,GAASM,EAAAA,EAAAA,MAAf,EAAnD,uBAGX,E,4BCWD,EAvBe,WACX,IAAMC,GAAahB,EAAAA,EAAAA,IAAYiB,EAAAA,IAE/B,OACI,iCACI,SAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,UACI,SAACC,EAAA,EAAD,WACI,UAACC,EAAA,EAAD,CAASC,gBAAc,EAAvB,WACI,SAAC5C,EAAD,CAAMK,GAAG,IAAIwC,KAAG,EAAhB,kBACCP,IAAc,SAACtC,EAAD,CAAMK,GAAG,aAAT,wBACbiC,GAA2B,SAACR,EAAD,KAAd,SAAC1B,EAAD,YAI3B,SAACsC,EAAA,EAAD,WACI,SAAC,EAAAI,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACI,SAAC,KAAD,UAKnB,C,sEC5BYC,E,QAAUhD,GAAAA,IAAH,+c,mBCAP+C,EAAS,WAClB,OACI,SAACC,EAAD,WAAS,SAAC,MAAD,KAGhB,C","sources":["components/Layout/Layout.styled.js","components/AuthNav/AuthNav.styled.js","components/AuthNav/AuthNav.jsx","components/Avatar/Avatar.jsx","components/UserMenu/UserMenu.styled.js","components/UserMenu/UserMenu.jsx","components/Layout/Layout.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx"],"sourcesContent":["import styled from 'styled-components'\nimport { NavLink } from \"react-router-dom\";\n\nexport const Link = styled(NavLink)`\n    margin-right: 10px;\n    cursor: pointer;\n    text-decoration: none;\n    color: black;\n    font-weight: 500;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n    :hover, :focus{\n        color: white;\n    }\n     &.active {\n    color: white;\n    \n  } \n`\n\n","import styled from 'styled-components'\nimport { NavLink } from \"react-router-dom\";\n\nexport const Link = styled(NavLink)`\n    cursor: pointer;\n    text-decoration: none;\n    color: black;\n    font-weight: 500;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n    :hover, :focus{\n        color: white;\n    }\n     &.active {\n    color: white;\n    \n  }\n`\n\nexport const Wrapper = styled.div`\n    display: flex;\n    margin-left: auto;\n    gap: 10px;\n`","import { Link, Wrapper } from \"components/AuthNav/AuthNav.styled\";\n\nexport const AuthNav = () => {\n    return (\n        <Wrapper>\n            <Link to='/login'>Log In</Link>\n            <Link to='/register'>Register</Link>\n        </Wrapper>\n    );\n};","import { useSelector } from \"react-redux\";\nimport { selectName } from \"redux/Auth/selectors\";\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n    },\n    children: `${name.split(' ')[0][0]}`,\n  };\n}\n\nexport default function BackgroundLetterAvatars() {\n   const name = useSelector(selectName);\n  return (\n    <Stack direction=\"row\" spacing={2}>\n      <Avatar {...stringAvatar(name)} sx={{ width: 24, height: 24 }}/>\n    \n    </Stack>\n  );\n}\n","import styled from 'styled-components'\nimport { NavLink } from \"react-router-dom\";\n\nexport const Link = styled(NavLink)`\n    cursor: pointer;\n    text-decoration: none;\n    color: black;\n    font-weight: 500;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n    :hover, :focus{\n        color: white;\n    }\n     &.active {\n    color: white;\n    \n  }\n`\n\nexport const Wrapper = styled.div`\n    display: flex;\n    margin-left: auto;\n    gap: 10px;\n    align-items: center;\n`","import { useDispatch } from \"react-redux\";\n// import { selectName, selectEmail } from \"redux/Auth/selectors\";\nimport { logOut } from \"redux/Auth/operations\";\nimport BackgroundLetterAvatars from \"components/Avatar/Avatar\";\nimport { Wrapper } from \"components/UserMenu/UserMenu.styled\";\nimport Button from '@mui/material/Button';\n\n\nexport const UserMenu = () => {\n    // const name = useSelector(selectName);\n    // const email = useSelector(selectEmail);\n    const dispatch = useDispatch();\n\n    return (\n        \n        <Wrapper>  \n            <BackgroundLetterAvatars/>\n            {/* <p>Welcome, {name}</p>\n            <p>Your email, {email}</p> */}\n            <Button type=\"button\" variant=\"contained\" onClick={() => dispatch(logOut())}>Log Out</Button>\n        </Wrapper>\n    )\n}","import { Outlet } from \"react-router-dom\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Suspense } from \"react\";\nimport { Link} from \"components/Layout/Layout.styled\";\nimport { AuthNav } from \"components/AuthNav/AuthNav\";\nimport { UserMenu } from \"components/UserMenu/UserMenu\";\nimport {selectIsLoggedIn} from \"redux/Auth/selectors\"\nimport { useSelector } from \"react-redux\";\nimport { AppBar, Toolbar, Container  } from '@mui/material';\n\nconst Layout = () => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n\n    return (\n        <>\n            <AppBar position=\"static\">\n                <Container>\n                    <Toolbar disableGutters>\n                        <Link to='/' end >Home</Link>\n                        {isLoggedIn && <Link to='/phonebook'>Phone Book</Link>}\n                        {!isLoggedIn ? <AuthNav /> : <UserMenu />}\n                    </Toolbar>\n                </Container>\n            </AppBar>\n            <Container>\n                <Suspense fallback={<Loader />}>\n                    <Outlet />\n                </Suspense>\n            </Container>\n        </>\n    )\n};\n\nexport default Layout;\n","\nimport styled from 'styled-components'\n\nexport const Pending = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  /* font-size: 20px; */\n  /* font-weight: bold; */\n  gap: 10px;\n  > svg {\n    animation-name: animate360;\n    animation-duration: 2s;\n    animation-timing-function: linear;\n    animation-iteration-count: infinite;\n  }\n    @keyframes animate360 {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n}\n`","import { Pending } from \"components/Loader/Loader.styled\";\nimport { ImSpinner3 } from \"react-icons/im\";\n\nexport const Loader = () => {\n    return (\n        <Pending><ImSpinner3 /></Pending>\n    );\n\n}"],"names":["Link","styled","NavLink","Wrapper","AuthNav","to","stringToColor","string","i","hash","length","charCodeAt","color","toString","slice","stringAvatar","name","sx","bgcolor","children","split","BackgroundLetterAvatars","useSelector","selectName","Stack","direction","spacing","Avatar","width","height","UserMenu","dispatch","useDispatch","Button","type","variant","onClick","logOut","isLoggedIn","selectIsLoggedIn","AppBar","position","Container","Toolbar","disableGutters","end","Suspense","fallback","Loader","Pending"],"sourceRoot":""}