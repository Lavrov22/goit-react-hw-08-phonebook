{"version":3,"file":"static/js/89.b5420e90.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx","../node_modules/@mui/material/esm/Input/inputClasses.js","../node_modules/@mui/material/esm/Input/Input.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/PhoneBook/PhoneBook.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectorOperation = state => state.contacts.operation;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilterByName = createSelector([selectContacts, selectFilter],\n    (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n})","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectorOperation } from \"redux/contacts/selectors\";\nimport { addContact } from \"redux/contacts/operation\";\nimport { nanoid } from 'nanoid'\nimport { Loader } from \"components/Loader/Loader\";\nimport {\n    FormGroup,\n    FormControl,\n    InputLabel,\n    OutlinedInput,\n    Box,\n    Button,\n} from '@mui/material';\n\n\nexport const ContactForm = () => {\n    \n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const contacts = useSelector(selectContacts);\n    const operation = useSelector(selectorOperation);\n    const numberId = useRef(nanoid());\n    const nameId = useRef(nanoid());\n\n    const dispatch = useDispatch();\n    \n    const handleChange = e => {\n        const { name, value } = e.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const contactsName = contacts.map(contact => contact.name.toLowerCase());\n        if (!contactsName.includes(name.toLowerCase())) {\n            dispatch(addContact({ name, number }));\n            return reset();\n        } else {\n             alert(`${name} is alredy in contacts`);\n        }\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <Box\n            sx={{ display: 'flex', flexWrap: 'wrap', mt: 1, }}\n            component=\"form\"\n            onSubmit={handleSubmit}\n            autoComplete='off'\n        >\n            <FormGroup sx={{ mx: 'auto', }}>\n                <FormControl sx={{ m: 1, width: '300px' }} variant=\"outlined\"  >\n                    <InputLabel htmlFor={nameId.current}>Name</InputLabel>\n                    <OutlinedInput\n                        onChange={handleChange}\n                        label=\"Name\"\n                        value={name}\n                        id={nameId.current}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </FormControl>\n                <FormControl sx={{ m: 1, width: '300px' }} variant=\"outlined\">\n                    <InputLabel htmlFor={numberId.current}>Number</InputLabel>\n                    <OutlinedInput\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        onChange={handleChange}\n                        value={number}\n                        id={numberId.current}\n\n                        label=\"Password\"\n                    />\n        \n                </FormControl>\n                <Button variant=\"contained\" type=\"submit\" sx={{ ml: 1, mr: 1, width: '300px' }} >{operation === \"add\" ? <Loader /> : 'Add contact'}</Button>\n            </FormGroup>\n        </Box>\n    );\n\n};\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nimport { inputBaseClasses } from '../InputBase';\nexport function getInputUtilityClass(slot) {\n  return generateUtilityClass('MuiInput', slot);\n}\nconst inputClasses = _extends({}, inputBaseClasses, generateUtilityClasses('MuiInput', ['root', 'underline', 'input']));\nexport default inputClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableUnderline\", \"components\", \"componentsProps\", \"fullWidth\", \"inputComponent\", \"multiline\", \"slotProps\", \"slots\", \"type\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { refType, deepmerge } from '@mui/utils';\nimport InputBase from '../InputBase';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport inputClasses, { getInputUtilityClass } from './inputClasses';\nimport { rootOverridesResolver as inputBaseRootOverridesResolver, inputOverridesResolver as inputBaseInputOverridesResolver, InputBaseRoot, InputBaseComponent as InputBaseInput } from '../InputBase/InputBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableUnderline\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableUnderline && 'underline'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getInputUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst InputRoot = styled(InputBaseRoot, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiInput',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [...inputBaseRootOverridesResolver(props, styles), !ownerState.disableUnderline && styles.underline];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const light = theme.palette.mode === 'light';\n  let bottomLineColor = light ? 'rgba(0, 0, 0, 0.42)' : 'rgba(255, 255, 255, 0.7)';\n  if (theme.vars) {\n    bottomLineColor = `rgba(${theme.vars.palette.common.onBackgroundChannel} / ${theme.vars.opacity.inputUnderline})`;\n  }\n  return _extends({\n    position: 'relative'\n  }, ownerState.formControl && {\n    'label + &': {\n      marginTop: 16\n    }\n  }, !ownerState.disableUnderline && {\n    '&:after': {\n      borderBottom: `2px solid ${(theme.vars || theme).palette[ownerState.color].main}`,\n      left: 0,\n      bottom: 0,\n      // Doing the other way around crash on IE11 \"''\" https://github.com/cssinjs/jss/issues/242\n      content: '\"\"',\n      position: 'absolute',\n      right: 0,\n      transform: 'scaleX(0)',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      }),\n      pointerEvents: 'none' // Transparent to the hover style.\n    },\n\n    [`&.${inputClasses.focused}:after`]: {\n      // translateX(0) is a workaround for Safari transform scale bug\n      // See https://github.com/mui/material-ui/issues/31766\n      transform: 'scaleX(1) translateX(0)'\n    },\n    [`&.${inputClasses.error}:after`]: {\n      borderBottomColor: (theme.vars || theme).palette.error.main,\n      transform: 'scaleX(1)' // error is always underlined in red\n    },\n\n    '&:before': {\n      borderBottom: `1px solid ${bottomLineColor}`,\n      left: 0,\n      bottom: 0,\n      // Doing the other way around crash on IE11 \"''\" https://github.com/cssinjs/jss/issues/242\n      content: '\"\\\\00a0\"',\n      position: 'absolute',\n      right: 0,\n      transition: theme.transitions.create('border-bottom-color', {\n        duration: theme.transitions.duration.shorter\n      }),\n      pointerEvents: 'none' // Transparent to the hover style.\n    },\n\n    [`&:hover:not(.${inputClasses.disabled}):before`]: {\n      borderBottom: `2px solid ${(theme.vars || theme).palette.text.primary}`,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        borderBottom: `1px solid ${bottomLineColor}`\n      }\n    },\n    [`&.${inputClasses.disabled}:before`]: {\n      borderBottomStyle: 'dotted'\n    }\n  });\n});\nconst InputInput = styled(InputBaseInput, {\n  name: 'MuiInput',\n  slot: 'Input',\n  overridesResolver: inputBaseInputOverridesResolver\n})({});\nconst Input = /*#__PURE__*/React.forwardRef(function Input(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$input;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInput'\n  });\n  const {\n      disableUnderline,\n      components = {},\n      componentsProps: componentsPropsProp,\n      fullWidth = false,\n      inputComponent = 'input',\n      multiline = false,\n      slotProps,\n      slots = {},\n      type = 'text'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(props);\n  const ownerState = {\n    disableUnderline\n  };\n  const inputComponentsProps = {\n    root: {\n      ownerState\n    }\n  };\n  const componentsProps = (slotProps != null ? slotProps : componentsPropsProp) ? deepmerge(slotProps != null ? slotProps : componentsPropsProp, inputComponentsProps) : inputComponentsProps;\n  const RootSlot = (_ref = (_slots$root = slots.root) != null ? _slots$root : components.Root) != null ? _ref : InputRoot;\n  const InputSlot = (_ref2 = (_slots$input = slots.input) != null ? _slots$input : components.Input) != null ? _ref2 : InputInput;\n  return /*#__PURE__*/_jsx(InputBase, _extends({\n    slots: {\n      root: RootSlot,\n      input: InputSlot\n    },\n    slotProps: componentsProps,\n    fullWidth: fullWidth,\n    inputComponent: inputComponent,\n    multiline: multiline,\n    ref: ref,\n    type: type\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Input.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary']), PropTypes.string]),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Input: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    input: PropTypes.object,\n    root: PropTypes.object\n  }),\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the component is disabled.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the `input` will not have an underline.\n   */\n  disableUnderline: PropTypes.bool,\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n  /**\n   * If `true`, the `input` will indicate an error.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the `input` will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a HTML element or a component.\n   * @default 'input'\n   */\n  inputComponent: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   * @default {}\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * If `true`, a [TextareaAutosize](/material-ui/react-textarea-autosize/) element is rendered.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  required: PropTypes.bool,\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.object,\n    root: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `components` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   * @default 'text'\n   */\n  type: PropTypes.string,\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nInput.muiName = 'Input';\nexport default Input;","import { useSelector, useDispatch } from \"react-redux\";\nimport { findContacts } from \"redux/contacts/filterSlice\";\nimport { selectFilter } from \"redux/contacts/selectors\";\nimport {\n  FormControl,\n  InputLabel,\n  Box,\n  Input,\n  Typography,\n  FormGroup\n\n} from '@mui/material';\n\nexport const Filter = () => {\n\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  \n  const filterChange = e => {\n    const { value } = e.currentTarget;\n    dispatch(findContacts(value));\n  };\n\n\n  return (\n      \n      <Box\n        sx={{ display: 'block', mt: 1, }}\n        component=\"form\"\n      >\n        <FormGroup >\n          <Typography variant=\"h5\" component=\"h1\" sx={{ textAlign: 'center', mt: 2 }}>\n            Find contacts by name\n          </Typography>\n          <FormControl sx={{ m: 1, width: '300px', mx: 'auto'}} variant=\"filled\">\n            <InputLabel  htmlFor='filter'>Filter</InputLabel>\n            <Input\n              type=\"text\"\n              name=\"filter\"\n              value={filter}\n              onChange={filterChange}\n            />\n        \n          </FormControl>\n        </FormGroup>\n      </Box>\n  );\n\n};\n\n","import styled from 'styled-components'\n\nexport const List = styled.ul`\n    padding: 10px;\n`","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectorOperation } from \"redux/contacts/selectors\";\nimport { deleteContact } from \"redux/contacts/operation\";\nimport { Loader } from \"components/Loader/Loader\";\nimport {\n    Box,\n    Typography,\n    Button,\n} from '@mui/material';\n\n\n\nexport const ContacItem = ({id, name, number}) => {\n    const operation = useSelector(selectorOperation);\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            {operation === 'fetch' ? <Loader/> : <Box sx={{ display: 'flex', alignItems: 'center', mt: 1, gap: 2, justifyContent: 'space-between', width: '300px', mx: 'auto' }}>\n                <Typography variant=\"body1\" component=\"h1\" sx={{ textAlign: 'center' }}>\n                    {name}: {number}\n                </Typography>\n                <Button variant=\"contained\" type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n                    {operation === id ? <Loader /> : 'Delete'}\n                </Button>\n            </Box>}\n        </>\n    );\n};\n\nContacItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n}","import { useSelector } from 'react-redux';\nimport { selectFilterByName } from \"redux/contacts/selectors\";\nimport { List } from \"components/ContactList/ContactList.styled\";\nimport {ContacItem} from \"components/ContactItem/ContactItem\"\n\n\n    \nexport const ContactList = () => {\n\n    const visibleName = useSelector(selectFilterByName);\n    return (\n        <List >\n            {visibleName.map(contact => <ContacItem key={contact.id} {...contact} />)}\n        </List >\n    );  \n};\n\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector} from \"react-redux\";\nimport { selectError, selectorOperation } from \"redux/contacts/selectors\";\nimport { fetchContacts } from \"redux/contacts/operation\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Loader } from \"components/Loader/Loader\";\nimport {\n  Box,\n  Typography,\n} from '@mui/material';\n\n\n\n\n\nconst PhoneBook = () => {\n  const error = useSelector(selectError);\n  const operation = useSelector(selectorOperation);\n  \n\n\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    \n  }, [dispatch])\n\n\n  return (\n      \n      <Box>\n        <Typography variant=\"h3\" component=\"h1\" sx={{ textAlign: 'center', mt: 2 }}>\n          Phonebook\n        </Typography>\n\n        <ContactForm></ContactForm>\n        {error && <b>{error}</b>}\n        {!error && <div>\n          <Typography variant=\"h3\" component=\"h2\" sx={{ textAlign: 'center', mt: 2 }}>\n            Contacts\n          </Typography>\n          <Filter></Filter>\n          {operation === 'fetch' && !error ? <Loader /> : <ContactList />}\n        </div>}\n      </Box>\n  );\n \n};\n\n\nexport default PhoneBook;"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectError","error","selectorOperation","operation","selectFilter","filter","selectFilterByName","normalizedFilter","toLowerCase","contact","includes","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","ContactForm","useState","setName","number","setNumber","useSelector","numberId","useRef","nameId","dispatch","useDispatch","handleChange","e","currentTarget","reset","Box","sx","display","flexWrap","mt","component","onSubmit","preventDefault","addContact","alert","autoComplete","FormGroup","mx","FormControl","m","width","variant","InputLabel","htmlFor","current","OutlinedInput","onChange","label","type","pattern","title","required","Button","ml","mr","Loader","getInputUtilityClass","slot","generateUtilityClass","_extends","inputBaseClasses","generateUtilityClasses","_excluded","InputRoot","styled","InputBaseRoot","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","inputBaseRootOverridesResolver","disableUnderline","underline","theme","bottomLineColor","palette","mode","vars","common","onBackgroundChannel","opacity","inputUnderline","position","formControl","marginTop","borderBottom","color","main","left","bottom","content","right","transform","transition","transitions","create","duration","shorter","easing","easeOut","pointerEvents","inputClasses","borderBottomColor","text","primary","borderBottomStyle","InputInput","InputBaseInput","inputBaseInputOverridesResolver","Input","React","inProps","ref","_ref","_slots$root","_ref2","_slots$input","useThemeProps","components","componentsPropsProp","componentsProps","fullWidth","inputComponent","multiline","slotProps","slots","other","_objectWithoutPropertiesLoose","classes","root","input","composedClasses","composeClasses","useUtilityClasses","inputComponentsProps","deepmerge","RootSlot","Root","InputSlot","_jsx","InputBase","muiName","Filter","Typography","textAlign","findContacts","List","ContacItem","alignItems","gap","justifyContent","onClick","deleteContact","ContactList","visibleName","useEffect","fetchContacts"],"sourceRoot":""}